First copy the diffutils folder as instructed:
cp -r ~eggert/src/gnu/diffutils diffutils
cd diffutils/

Generate the log and tags
git log > git-log.txt
git tag > git-tags.txt

We then open git-log.txt and search for "maint: quote"
C-s maint: quote
I copy the commit id and run:
62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f

git format-patch -1 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f --stdout > quote-patch.txt     

git checkout v3.0
patch -p1 < quote-patch.txt
Use -p1 because all of the paths in the patch file start with a/ or b/ which we want to remove

The patch couldn't find:
man/help2man
doc/diffutils.texi
HACKING

which I avoided by telling the shell to skip that patch edit.

Afterwards, I run a git status to make sure the correct files are modified.
# HEAD detached at v3.0
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#		modified:   NEWS
#		modified:   README
#		modified:   TODO
#		modified:   doc/diagmeet.note
#		modified:   ms/config.bat
#		modified:   ms/config.site
#		modified:   po/en.po
#		modified:   src/analyze.c
#		modified:   src/cmp.c
#		modified:   src/context.c
#		modified:   src/diff.c
#		modified:   src/diff.h
#		modified:   src/diff3.c
#		modified:   src/dir.c
#		modified:   src/ifdef.c
#		modified:   src/io.c
#		modified:   src/sdiff.c
#		modified:   src/side.c
#		modified:   src/system.h
#		modified:   src/util.c
#		modified:   tests/help-version
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#		NEWS.orig
#		README-hacking.orig
#		README-hacking.rej
#		README.orig
#		README.rej
#		cfg.mk.orig
#		cfg.mk.rej
#		git-log.txt
#		git-tags.txt
#		ms/config.site.orig
#		quote-patch.txt
#		src/cmp.c.orig
#		src/context.c.orig
#		src/diff.c.orig
#		src/diff.c.rej
#		src/diff.h.orig
#		src/diff3.c.orig
#		src/diff3.c.rej
#		src/dir.c.orig
#		src/sdiff.c.orig
#		src/system.h.orig
#		src/util.c.orig
#		tests/help-version.orig

For each modified file beside the ones ending in ".c"
I opened the file in emacs and ran:
C-x v =
vc-diff makes sure the edits are the ones applied.

C-x v u 
yes
C-x C-c
This reverted all changes made to it using vc-revert.

I ran a git status to make sure the files in question disappear
from the modified list.

To apply changes to the .c files, I opened them up in emacs.
Then I ran 
C-x v =
to open up the changes log so that I can see the changes made. 
I edit the changes that are not to string constants, which is 
dominated in large part in comments. 
For each of the parts I want to undo, I hover over the diff and run:
C-u C-c C-a 
Undoes the hunk and applies the changes using(C-c C-a)

Finally, I find the two files src/diff3.c.rej and src/diff.c.rej and I
manually apply the changes specified to the corresponding file.
Now I remove the untracked files using: 
git clean -f

I have 6 files remaining in my modified list:
# modified:   src/cmp.c
# modified:   src/diff.c
# modified:   src/diff3.c
# modified:   src/dir.c
# modified:   src/sdiff.c
# modified:   src/util.c

Now we generate the patch file using the command git diff:
git diff > quote-3.0-patch.txt


Now we actually built the project again.
First I run
./bootstrap

Then I copy the patch from the website into patch.txt
and I apply it using the command
patch -p0 patch.txt

Then I run
./configure
make
make check

To test out whether or not my build worked successfully I ran

src/diff . _
src/diff --help

Since the outputted messages use the regular ascii apostrophes instead
of the tilde character, we can safely assume that our patch built 
successfully with no errors.

For the sanity check, we make two copies of the source folders. First
we copy the src folder from our current branch into a new folder
diffutils-3.0-patch and save the changes in the git repo

git add .
git commit -m "patch"
git checkout -b patch

git checkout v3.0

Now we get the original v3.0 src folder and copy it into diffutils-3.0 folder. 

Now we run the diff using

diffutils/src/diff -pru diffutils-3.0 diffutils-3.0-patch > \
quote-3.0-test.txt

Now running diff quote-3.0-test.txt quote-3.0-patch.txt
The differences are all innocous. Since the file paths at the top of each diff is different
these file paths are marked in the diff or minor difference or innocous.
